#!/bin/bash
 
 
# Fantain Automation Build Script

# Variables used in common

newline='
'
datetime=$(date +"%d-%m-%Y-%k%M%S")
apkdir="$(dirname $0)/apkdir/$datetime" 

#Functions
# Help 
function help {
	echo '
ERROR: These paramters are needed to build fantain application

	      	Try fantainbuild 
			-t {android | website} 
			-i {fantain | srh }
			-s {dev | test | prod}	
			-u {true | false}
			-g {true | false}
			   -n { gittag name }
			   -d { gittag description }
			-v {version number}
			-c {version code number}

Example
------- 

If -g is set to false
fantainbuild -t android -i fantain -s dev -u true -g false -v 3.0 -c 1

If -g is set to  true
fantainbuild -t android -i fantain -s dev -u true -g true -n v1.0 -d "my git desc" -v 3.0 -c 1

For Detailed description of the parameters, try man fantainbuild
'
}
# Create a new build folder and copy the codebase to it
function newcodebase {
	mkdir -p "$apkdir"
	sudo rsync -v -a  . $apkdir
	echo "${newline}Your new codebase is in this location  ${newline} $apkdir"
}
# Check for important files in the new codebase

function checkfile() {
	if [ -f $1 ] && [ -f $2 ]; then
		echo "${newline}Good to Go..."
	else
		echo "${newline}Files Missing. Go to your root directory and try again" 
	fi
}


# Tigerring Help Function when there is no paramter
if test $# -eq 0; then
	help
	exit 0
fi

# Gettting the parameters from the command 
while getopts t:i:s:u:n:d:g:v:c: option
do
        case "${option}"
        in
                t) if [ ${OPTARG,,} = 'android' ] || [ ${OPTARG,,} = 'website' ]; then
			platform=${OPTARG,,}
		   else
			help 
			exit
	    	   fi;;
                i) if [ ${OPTARG,,} = 'fantain' ] || [ ${OPTARG,,} = 'srh' ]; then
                        installation=${OPTARG,,}
                   else 
			help 
			exit
                   fi;;
                s) if [ ${OPTARG,,} = 'dev' ] || [ ${OPTARG,,} = 'test' ] || [ ${OPTARG,,} = 'prod' ]; then
                        instance=${OPTARG,,}
                   else 
			help 
			exit
                   fi;;
                u) if [ ${OPTARG,,} = 'true' ] || [ ${OPTARG,,} = 'false' ]; then
                        uglify=${OPTARG,,}
                   else 
			help 
			exit
                   fi;;
		n) if [ ${OPTARG} ]; then
                        gittagname=${OPTARG,,}
                   else
                        help
                        exit
                   fi;;
		d) if [ ${OPTARG} ]; then
                        gittagdesc=${OPTARG,,}
                   else
                        help
                        exit
                   fi;;		
		g) if [ ${OPTARG,,} = 'true' ]; then
                      if [ -z $gittagname ] || [ -z $gittagdesc ]; then
			help
			exit
		      else
			gittag=${OPTARG,,}
		      fi   
	           elif [ ${OPTARG,,} = 'false' ]; then
		      if [ -z $gittagname ] || [ -z $gittagdesc ]; then
                        echo "${newline}WARNING: -g is set to false. -d -n  are ignored for smooth build."
			gittag=${OPTARG,,}
		      else
			gittag=${OPTARG,,}
		   fi
                   else 
			help 
			exit
                   fi;;
	     	v) if [ ${OPTARG} ]; then
                        version=${OPTARG}
                   else 
			help 
			exit
                   fi;;
	        c) if [ ${OPTARG} ]; then
                        versioncode=${OPTARG}
                   else 
			help 
			exit
                   fi;;
		*) help
		   exit
        esac
done

# Checking whether all parameters are set to build the application
if [ -z $platform ] || [ -z $installation ] || [ -z $instance ] || [ -z $uglify ] || [ -z $gittag ] || [ -z $version ] || [ -z $versioncode ]; then
	help		
	exit
else
	# All set Need to Transfer the Files from working directory
	echo "${newline}Hurray!! All Parameters are Good"
	while true; 
	do
    		read -p "${newline}Are you in Root Directory of your project?(y or n)" yn
    			case $yn in
        			[Yy]* ) newcodebase
					checkfile fantain-build.js config.xml
					break;;
        			[Nn]* ) echo "${newline}Please go to your root directory and try again.Bubie.."
					exit;;
        	    		    * ) echo "${newline}Please enter y or n";;
   		 esac
	done
fi
