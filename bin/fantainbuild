# Fantain Automation Build Script


#!/bin/bash

#Matrix Table to set the environment for build to be smooth
#--------------------------------------------------------------------------------
#                WEBSITE                                  ANDROID
#--------------------------------------------------------------------------------
#       FANTAIN               SRH                 FANTAIN              SRH
#--------------------------------------------------------------------------------
#DEV      NA                   NA               $devapkfantain      $devapksrh
#--------------------------------------------------------------------------------
#TEST     NA                   NA                  NA                  NA
#--------------------------------------------------------------------------------
#PROD     NA                   NA               $prodapkfantain     $prodapksrh
#--------------------------------------------------------------------------------
  
# Variables 
# common
newline='
'
datetime=$(date +"%d-%m-%Y-%k%M%S")
apkdir="$(dirname $0)/buildapplication/$datetime" 
# Environment 
devapkfantain="com.fantain.fantain"
prodapkfantain="com.fantain.co.mainapp"
devapksrh="com.fantain.srhdev"
prodapksrh="com.fantain.srh"
# Search strings
deployinstallation="DEPLOYINSTALLATION"
deployinstance="DEPLOYINSTANCE"
deployid="DEPLOYID"
deployversion="DEPLOYVERSION"
deployversioncode="DEPLOYVERSIONCODE"


# Functions
# Help 
function help {
	echo '
ERROR: These paramters are needed to build fantain application

	      	Try fantainbuild 
			-t {android | website} 
			-i {fantain | srh }
			-s {dev | test | prod}	
			-u {true | false}
			-g {true | false}
			   -n { gittag name }
			   -d { gittag description }
			-v {version number}
			-c {version code number}

Example
------- 

If -g is set to false
fantainbuild -t android -i fantain -s dev -u true -g false -v 3.0 -c 1

If -g is set to  true
fantainbuild -t android -i fantain -s dev -u true -g true -n v1.0 -d "my git desc" -v 3.0 -c 1

For Detailed description of the parameters, try man fantainbuild
'
}
# Create a new build folder and copy the codebase to it
function newcodebase {
	mkdir -p "$apkdir"
	sudo rsync -v -a  . $apkdir
	echo "${newline}Your new codebase is in this location  ${newline} $apkdir"
	# Files Required to build the application with the complete path
	configxml=$apkdir/config.xml
	fantainEnvjs=$apkdir/www/js/f/fantainEnv.js
	serverjs=$apkdir/server.js
	AndroidManifestxml=$apkdir/platforms/android/AndroidManifest.xml
}
# Check for important files in the new codebase
function checkfile() {
	if [ -f $1 ] && [ -f $2 ] && [ -f $s3 ]; then
		echo "${newline}Important Files that are needed to create build seems to be good"
	else
		echo "${newline}Files Missing. Go to your root directory and try again" 
	fi
}
# Find the Text and Replace with the platform specific values
function searchandreplace() {
	search=$2
	replace=$3
	search1=$4
	replace1=$5
  	  grep "$search" $1 &> /dev/null
  	  if [ $? -ne 0 ]; then
    		echo "Search string not found in $1!"
  	  else
    		sed -i "s/$search/$replace/" $1
  	  fi
	  grep "$search1" $1 &> /dev/null
          if [ $? -ne 0 ]; then
                echo "Search string not found in $1!"
          else
                sed -i "s/$search1/$replace1/" $1
          fi
}
# Build Application for website
function buildwebsite {
	searchandreplace $fantainEnvjs $deployinstallation $installation $deployinstance $instance
	echo "${newline}Enivronments are set as per your needs"
	searchandreplace $serverjs "8080" "9080"	  
	cd $apkdir
	echo "${newline}Make sure that node server is up and running"
	echo "${newline}Make sure that you have compiled compass"
        echo "${newline}Fantain Build is Started"
	node r.js -o fantain-build.js
	echo "${newline}Play is set and you can view it using 9080 portnumber"
	node server.js
}
# Build APK for mobiles
function buildapk {
	searchandreplace $fantainEnvjs $deployinstallation $installation $deployinstance $instance
	searchandreplace $configxml $deployversion $version
	searchandreplace $AndroidManifestxml $deployversioncode $versioncode
	if [ $instance = 'dev' ]; then
		if [ $installation = 'fantain' ]; then
			searchandreplace $configxml $deployid $devapkfantain 
		else
			searchandreplace $configxml $deployid $devapksrh
		fi
	elif [ $instance = 'prod' ]; then
                if [ $installation = 'fantain' ]; then
                        searchandreplace $configxml $deployid $prodapkfantain
                else
                        searchandreplace $configxml $deployid $prodapksrh
                fi
	else
		if [ $installation = 'fantain' ]; then
                        echo "${newline}This installation under contruction.Try again to get your APK"
			exit 
                else
                        echo "${newline}This installation under contruction.Try again to get your APK" 
			exit
                fi
	fi
	echo "${newline}Enivronments are set as per your needs"
	cd $apkdir
	echo "${newline}APK Build process started"
	cordova build
	echo "${newline}Get your new APK at $apkdir/platforms/android/ant-build/"
}


# Trigerring Help Function when there is no paramter
if test $# -eq 0; then
	help
	exit 0
fi

# The build kicksoff from here
# Gettting the parameters from the command 
while getopts t:i:s:u:n:d:g:v:c: option
do
        case "${option}"
        in
                t) if [ ${OPTARG,,} = 'android' ] || [ ${OPTARG,,} = 'website' ]; then
			platform=${OPTARG,,}
		   else
			help 
			exit
	    	   fi;;
                i) if [ ${OPTARG,,} = 'fantain' ] || [ ${OPTARG,,} = 'srh' ]; then
                        installation=${OPTARG,,}
                   else 
			help 
			exit
                   fi;;
                s) if [ ${OPTARG,,} = 'dev' ] || [ ${OPTARG,,} = 'test' ] || [ ${OPTARG,,} = 'prod' ]; then
                        instance=${OPTARG,,}
                   else
			help 
			exit
                   fi;;
                u) if [ ${OPTARG,,} = 'true' ] || [ ${OPTARG,,} = 'false' ]; then
                        uglify=${OPTARG,,}
                   else 
			help 
			exit
                   fi;;
		n) if [ ${OPTARG} ]; then
                        gittagname=${OPTARG,,}
                   else
                        help
                        exit
                   fi;;
		d) if [ ${OPTARG} ]; then
                        gittagdesc=${OPTARG,,}
                   else
                        help
                        exit
                   fi;;		
		g) if [ ${OPTARG,,} = 'true' ]; then
                      if [ -z $gittagname ] || [ -z $gittagdesc ]; then
			help
			exit
		      else
			gittag=${OPTARG,,}
		      fi   
	           elif [ ${OPTARG,,} = 'false' ]; then
		      if [ -z $gittagname ] && [ -z $gittagdesc ]; then
			gittag=${OPTARG,,}
		      else
			echo "${newline}WARNING: -g is set to false. -d -n  are ignored for smooth build." 
			echo "${newline}Cleaning you command..." 
			gittag=${OPTARG,,}
		   fi
                   else 
			help 
			exit
                   fi;;
	     	v) if [ ${OPTARG} ]; then
                        version=${OPTARG}
                   else 
			help 
			exit
                   fi;;
	        c) if [ ${OPTARG} ]; then
                        versioncode=${OPTARG}
                   else 
			help 
			exit
                   fi;;
		*) help
		   exit
        esac
done
# Checking whether all parameters are set to build the application
if [ -z $platform ] || [ -z $installation ] || [ -z $instance ] || [ -z $uglify ] || [ -z $gittag ] || [ -z $version ] || [ -z $versioncode ]; then
	help		
	exit
else
	# All set Need to Transfer the Files from working directory
	echo "${newline}Hurray!! All Parameters are Good"
	while true; 
	do
    		read -p "${newline}Are you in Root Directory of your project?(y or n)" yn
    			case $yn in
        			[Yy]* ) # Codebase moved to a new location for safety
					newcodebase
					# Gittagging done for the new codebase
					if [ $gittag = 'true' ]; then
						cd $apkdir
						sudo git tag -a $gittagname -m $gittagdesc
					fi
					# Check the important files which are need to build the application
					checkfile $configxml $fantainEnvjs $AndroidManifestxml
					if [ $platform = 'website' ]; then 
						buildwebsite
					else
						buildapk
					fi  
					break;;
        			[Nn]* ) # To make the user run the fantainbuild from the root directory
					echo "${newline}Please go to your root directory and try again.Bubie.."
					exit;;
        	    		    * ) # To handle the wrong input given by the user
					echo "${newline}Please enter y or n";;
   		 esac
	done
fi
